function m = scalemodel_limlin(Iincrsamples, Ns)
%% returns structure defining asymptotically limited linear scaling model

if nargin < 2, Ns = 1:size(Iincrsamples, 2); end
assert(length(Ns) == size(Iincrsamples,2));

% Iincr sample statistics
Iincr_mu = mean(Iincrsamples);
N = max(Ns);
Iinfini = max(0,max(cumsum(Iincr_mu)));
cini = max(0,mean(Iincr_mu./diff([0 Ns])));
Iinfsd = max(1, 10*Iinfini);
csd = 10*(cini+0.5);

% info scaling functions (realmin avoids 0 / 0 for x = [0 0])
In = @(x, Ns) ((x(1)*x(2)) * Ns) ./ max(realmin, x(1)+x(2)*Ns);
Iincr = @(x, Ns) diff([0 In(x, Ns)]);
% prior is student's T prior on c, Iinf, empirical mean, SD = 10 x mean
logp = @(x) -log(1+((x(1)-Iinfini)/Iinfsd)^2) ...
            -log(1+((x(2)-cini)/csd)^2);
% population to reach a% of Iinf
nfrac = @(x, a) (a./(1-a))*(x(1)/x(2));

% model properties
m = struct(...
    'name', 'limlin', ...
    'col', [0 0 0.8], ...
    'N', N, ...
    'Ns', Ns, ...
    'Infn', In, ...
    'Iincrfn', Iincr, ...
    'nfracfn', nfrac, ...
    'logp', logp, ...
    'pmin', [0 0], ...
    'pmax', [Inf Inf], ...
    'pini', [Iinfini cini], ...
    'pw', [(Iinfsd/5) (csd/20)], ...
    'prim', [Iinfini cini], ...
    'pris', [Iinfsd csd]);
m.pnames = {'Iinf', 'c'};
