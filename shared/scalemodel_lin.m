function m = scalemodel_lin(Iincrsamples, Ns)
%% returns structure defining linear scaling model

if nargin < 2, Ns = 1:size(Iincrsamples, 2); end
assert(length(Ns) == size(Iincrsamples,2));

% Iincr sample statistics
Iincr_mu = mean(Iincrsamples);
N = max(Ns);
cini = max(0,mean(Iincr_mu./diff([0 Ns])));
csd = 10*(cini+0.5);

% info scaling functions
In = @(x, Ns) x(1) * Ns;
Iincr = @(x, Ns) x(1) * diff([0 Ns]);
% prior is student's T prior on c, empirical mean, SD = 10 x mean
logp = @(x) -log(1+((x(1)-cini)/csd)^2);
% population to reach a% of Iinf
nfrac = @(x, a) Inf*ones(size(a));

% model properties
m = struct(...
    'name', 'lin', ...
    'col', [0.8 0 0], ...
    'N', N, ...
    'Ns', Ns, ...
    'Infn', In, ...
    'Iincrfn', Iincr, ...
    'nfracfn', nfrac, ...
    'logp', logp, ...
    'pmin', 0, ...
    'pmax', Inf, ...
    'pini', cini, ...
    'pw', csd/20, ...
    'prim', cini, ...
    'pris', csd);
m.pnames = {'c'};
